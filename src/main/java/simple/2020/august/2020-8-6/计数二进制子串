//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public int countBinarySubstrings(String s) {
        if (s == null || s.length() < 2) {
            return 0;
        }
        char[] chars = s.toCharArray();
        int count = 0;
        char left,right;
        int indexLeft,indexRight;
        for (int i=0;i<chars.length-1;i++){
            left = chars[i];
            right = chars[i+1];
            if (left != right) {
                count++;
                indexLeft = i-1;
                indexRight = i+2;
                while (indexLeft >= 0 && indexRight < chars.length){
                    if (chars[indexLeft] == left && chars[indexRight] ==right) {
                        count++;
                        indexLeft--;
                        indexRight++;
                    }else {
                        break;
                    }
                }
            }
        }
        return count;
    }
}
//leetcode submit region end(Prohibit modification and deletion)