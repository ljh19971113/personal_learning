//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    int count = 0;
    public boolean validPalindrome(String s) {
        int left = 0;
        int right = s.length()-1;
        while (left < right){
            char l = s.charAt(left);
            char r = s.charAt(right);
            if (l == r) {
                left++;
                right--;
            }else {
                count++;
                if (count > 1){
                    return false;
                }
                return helper(s,left+1,right) || helper(s,left,right-1);
            }
        }
        return true;
    }
    public boolean helper(String s,int left,int right){
        while (left < right){
            char l = s.charAt(left);
            char r = s.charAt(right);
            if (l == r) {
                left++;
                right--;
            }else {
                count++;
                if (count > 1){
                    return false;
                }
            }
        }
        return true;
    }
}
//leetcode submit region end(Prohibit modification and deletion)