import sun.reflect.generics.tree.Tree;

import java.util.PriorityQueue;
import java.util.TreeMap;
import java.util.TreeSet;


//leetcode submit region begin(Prohibit modification and deletion)
class KthLargest {
    private int size;
    private PriorityQueue<Integer> pq = new PriorityQueue<>();

    public KthLargest(int k, int[] arr) {
        size = k;
        for (int i:arr) {
            add(i);
        }
    }

    public int add(int val) {
        if (pq.size() == size && val > pq.peek()) {
            pq.poll();
            pq.add(val);
        }else if (pq.size() < size) {
            pq.add(val);
        }
        return pq.peek();
    }
}

/**
 * Your KthLargest object will be instantiated and called as such:
 * KthLargest obj = new KthLargest(k, nums);
 * int param_1 = obj.add(val);
 */
//leetcode submit region end(Prohibit modification and deletion)