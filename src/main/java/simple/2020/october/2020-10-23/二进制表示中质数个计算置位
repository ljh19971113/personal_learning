//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public int countPrimeSetBits(int L, int R) {
        int count = 0;
        for (;L<= R;L++) {
            if (isPrime(countNumBinary(L))) {
                count++;
            }
        }
        return count;
    }
    public int countNumBinary(int num) {
        int res = 0;
        while (num != 0) {
            res++;
            num &= (num-1);
        }
        return res;
    }
    public boolean isPrime(int num) {
        if (num <= 3) {
            return num > 1;
        }
        int sqrt = (int) Math.sqrt(num)+1;
        for (int i=2;i<=sqrt;i++) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }

}
//leetcode submit region end(Prohibit modification and deletion)