//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    boolean[][] flag;
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        int src = image[sr][sc];
        if (src == newColor){
            return image;
        }
        int width = image[0].length;
        int height = image.length;
        flag = new boolean[height][width];
        helper(src,image,sr,sc,newColor);
        return image;
    }
    public void helper(int src,int[][] image,int sr,int sc,int newColor) {
        if (image[sr][sc] == src) {
            flag[sr][sc] = true;
            image[sr][sc] = newColor;
        }else {
            return;
        }
        if (sr > 0 && !flag[sr-1][sc] && image[sr-1][sc] == src){
            helper(src,image,sr-1,sc,newColor);
        }
        if (sr+1 < image.length && !flag[sr+1][sc] && image[sr+1][sc] == src) {
            helper(src,image,sr+1,sc,newColor);
        }
        if (sc > 0 && !flag[sr][sc-1] && image[sr][sc-1] == src) {
            helper(src,image,sr,sc-1,newColor);
        }
        if (sc+1 < image[0].length && !flag[sr][sc+1] && image[sr][sc+1] == src) {
            helper(src,image,sr,sc+1,newColor);
        }

    }
}
//leetcode submit region end(Prohibit modification and deletion)
