//leetcode submit region begin(Prohibit modification and deletion)
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        if (root == null){
            return 0;
        }
        if (root.left == null){
            return helper(root.right)+1;
        }
        if (root.right == null) {
            return helper(root.left)+1;
        }
        return helper(root);
    }
    int helper(TreeNode node){
        if(node == null){
            return 0;
        }
        if(node.left == null && node.right == null){
            return 1;
        }
        if(node.left != null && node.right == null){
            return helper(node.left)+1;
        }
        if(node.left == null && node.right != null){
            return helper(node.right)+1;
        }
        return Math.min(helper(node.left),helper(node.right)) + 1;
    }
}
//leetcode submit region end(Prohibit modification and deletion)