//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public boolean wordPattern(String pattern, String str) {
        String[] arr = str.split(" ");
        if (pattern.length() != arr.length) {
            return false;
        }
        Map<Character,String> map = new HashMap<>();
        for (int i=0;i<pattern.length();i++) {
            Character c = pattern.charAt(i);
            if (!map.containsKey(c)) {
                if (map.containsValue(arr[i])) {
                    return false;
                }
                map.put(c,arr[i]);
            } else {
                if (!map.get(c).equals(arr[i])) {
                    return false;
                }

            }
        }
        return true;
    }
}
//leetcode submit region end(Prohibit modification and deletion)