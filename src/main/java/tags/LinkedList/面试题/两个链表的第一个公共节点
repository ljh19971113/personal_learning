两个链表的第一个公共节点
//leetcode submit region begin(Prohibit modification and deletion)

import java.util.Set;

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode A = headA;
        ListNode B = headB;
        while (A != B) {
            A = A == null ? headB : A.next;
            B = B == null ? headA : B.next;
        }
        return A;
    }
}
//leetcode submit region end(Prohibit modification and deletion)

//leetcode submit region begin(Prohibit modification and deletion)
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode A = headA;
        ListNode B = headB;
        while (A != null || B != null) {
            if (A == B) {
                return A;
            }
            A = A == null ? headB : A.next;
            B = B == null ? headA : B.next;
        }
        return null;
    }
}
//leetcode submit region end(Prohibit modification and deletion)
20210506 这道题踩了很多坑，虽然知道这个思想，但是还是做错了，主要没考虑好
1.终止条件
2.A，B值精准的转变以及转变的及时对比