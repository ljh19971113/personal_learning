奇偶链表
//leetcode submit region begin(Prohibit modification and deletion)
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode odd = head;
        ListNode oddHead = odd;
        ListNode even = head.next;
        ListNode evenHead = even;
        ListNode cur = even.next;
        while (cur != null) {
            ListNode temp = cur;
            cur = cur.next;
            even.next = cur;
            odd.next = temp;
            odd = odd.next;
            odd.next = evenHead;
            if (cur != null) {
                cur = cur.next;
                even = even.next;
            }
        }
        return oddHead;
    }
}
//leetcode submit region end(Prohibit modification and deletion)  20210503  原地分类一把成功