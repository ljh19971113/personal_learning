扁平化多级双向链表
//leetcode submit region begin(Prohibit modification and deletion)
/*
// Definition for a Node.
class Node {
    public int val;
    public Node prev;
    public Node next;
    public Node child;
};
*/

class Solution {
    Node last = null;
    public Node flatten(Node head) {
        if (head == null) {
            return head;
        }
        helper(head);
        return head;
    }
    public void helper(Node node) {
        if (node != null) {
            if (last == null) {
                last = node;
            } else {
                last.next = node;
                node.prev = last;
                last = node;
            }
            Node next = node.next;
            helper(node.child);
            node.child = null;
            helper(next);
        }
    }
}
//leetcode submit region end(Prohibit modification and deletion)
20210504 这道题遇到了一个麻烦，没有使用Node next = node.next;将next节点进行存储，导致无限循环