回文链表
//leetcode submit region begin(Prohibit modification and deletion)
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if (head == null || head.next == null) {
            return true;
        }
        ListNode slow = head;
        ListNode fast = head;
        while (fast.next != null && fast.next.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode node = reverseNode(slow.next);
        while (node != null) {
            if (node.val != head.val) {
                return false;
            }
            node = node.next;
            head = head.next;
        }
        return true;
    }
    ListNode reverseNode(ListNode node) {
        ListNode cur = null;
        while (node != null) {
            ListNode temp = node;
            node = node.next;
            temp.next = cur;
            cur = temp;
        }
        return cur;
    }
    void printNode(ListNode node) {
        while (node != null) {
            System.out.print(node.val+"->");
            node = node.next;
        }
        System.out.println("null");
    }
}
//leetcode submit region end(Prohibit modification and deletion) 20210503 没想到要恢复链表