最小栈
//leetcode submit region begin(Prohibit modification and deletion)
class MinStack {
    Stack<Integer> vals = new Stack<>();
    Stack<Integer> min = new Stack<>();
    /** initialize your data structure here. */
    public MinStack() {
    }

    public void push(int val) {
        vals.push(val);
        if (min.isEmpty()) {
            min.push(val);
        } else {
            if (min.peek() > val) {
                min.push(val);
            } else {
                min.push(min.peek());
            }
        }
    }

    public void pop() {
        vals.pop();
        min.pop();
    }

    public int top() {
        return vals.peek();
    }

    public int getMin() {
        return min.peek();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
//leetcode submit region end(Prohibit modification and deletion)
20210510
解答成功:
执行耗时:6 ms,击败了97.34% 的Java用户
内存消耗:40 MB,击败了83.87% 的Java用户