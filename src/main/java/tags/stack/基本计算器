基本计算器
//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public int calculate(String s) {
        Stack<Integer> ops = new Stack<>();
        int sign = 1;
        ops.push(sign);
        int len = s.length();
        int i = 0;
        int res = 0;
        while (i < len) {
            if (s.charAt(i) == ' ') {
                i++;
            } else if (s.charAt(i) == '+') {
                sign = ops.peek();
                i++;
            } else if (s.charAt(i) == '-') {
                sign = -ops.peek();
                i++;
            } else if (s.charAt(i) == '(') {
                ops.push(sign);
                i++;
            } else if (s.charAt(i) == ')') {
                ops.pop();
                i++;
            }else {
                long num = 0;
                while (i < len && Character.isDigit(s.charAt(i))) {
                    num = num*10 + s.charAt(i)-'0';
                    i++;
                }
                res += sign*num;
            }
        }
        return res;
    }
}
//leetcode submit region end(Prohibit modification and deletion)
20210511
解答成功:
执行耗时:13 ms,击败了55.62% 的Java用户
内存消耗:38.4 MB,击败了89.81% 的Java用户